#!/usr/bin/env zsh -f
# search across notes and recent work locations with the silver searcher

function is_sift_p {
    integer sift_p=0
    declare sift_code_file="$HOME/code/java/build.gradle"
    if [[ -s $sift_code_file ]]; then
        sift_p=1
    fi
    print $sift_p
}
# typeset -T -f is_sift

function sift_search_dirs {
    local sift_prefix="${HOME}/pdata/employers/sift"
    if (( $(is_sift_p) )); then
        sift_prefix="${HOME}/sift"
    fi
    local -r -a sift_dirs=(
        ${sift_prefix}/notes
        ${sift_prefix}/todo
    )
    for d in ${sift_dirs[@]}; do
        if [[ -d "$d" ]]; then
            print "$d"
        fi
    done
}
# typeset -T -f sift_search_dirs

function jwm_search_dirs {
    local -r -a search_dirs=(
        ${HOME}/jwm/notes
        ${HOME}/jwm/todo
        ${HOME}/pdata/notes
        ${HOME}/pdata/todo
    )
    for d in ${search_dirs[@]}; do
        if [[ -d "$d" ]]; then
            print "$d"
        fi
    done
}

function emacs_org_agenda_dirs {
    # search current areas of interest, as represented in my emacs org agena list
    local -r emacs_org_agenda_fname="$HOME/.emacs.d/org-agenda-files-list"
    if [[ -e "$emacs_org_agenda_fname" ]]; then
        while read filename rest; do
            # replace ~ with $HOME
            filename="${filename//\~/$HOME}"
            if [[ -s $filename ]]; then
                # replace files with the directories they reside in
                print "$filename:h"
            fi
        done < "$emacs_org_agenda_fname"
    fi
}


# this function produces duplicates, as often I will have files in the org agenda file list
#  that reside in one of the directories in search_dirs.
function nag_search_dirs {
    sift_search_dirs
    jwm_search_dirs
    emacs_org_agenda_dirs
}
# turn on debug tracing just for this named function
# typeset -T -f nag_search_dirs

# de-dup using zsh unique array.  see the manual: zsh builtins: typeset -U
declare -a -U unique_search_dirs=($(nag_search_dirs))
ag $@ $unique_search_dirs
